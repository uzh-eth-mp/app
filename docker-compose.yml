version: "3.9"
services:
  # PostgreSQL
  db:
    user: "${DATA_UID}:${DATA_GID}"
    build:
      context: ./src/db
      # PostgreSQL data dir permissions (user + bdlt group)
      args:
        UID: "${DATA_UID}"
        GID: "${DATA_GID}"
    group_add:
      - ${DATA_GID}
    ports:
      - "13338:5432"
    env_file:
      - ./src/db/.env
    # Persistent storage
    volumes:
      - ${DATA_DIR}/postgresql-data:/var/lib/postgresql/data

  # Kafka (zookeeper)
  zookeeper:
    build:
      context: ./src/zookeeper
      args:
        # Zookeeper data dir permissions (user + bdlt group)
        ZOO_USER: ${USER}
        ZOO_UID: ${DATA_UID}
        ZOO_GID: ${DATA_GID}
    user: "${USER}:${DATA_GID}"
    ports:
      - "2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ${DATA_DIR}/zookeeper-data/data:/data
      - ${DATA_DIR}/zookeeper-data/datalog:/datalog
  kafka:
    build:
      context: ./src/kafka
      args:
        # Kafka data dir permissions (user + bdlt group)
        KAFKA_USER: ${USER}
        KAFKA_UID: ${DATA_UID}
        KAFKA_GID: ${DATA_GID}
    ports:
      - "9092"
    environment:
      # Kafka specific environment variables
      - KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS=6000
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_LOG_DIRS=/kafka/kafka-logs
      - KAFKA_CREATE_TOPICS=eth:100:1,etc:100:1,bsc:100:1
    volumes:
      - ${DATA_DIR}/kafka-data:/kafka

  # Redis
  redis:
    image: redis
    ports:
      - "6379"

  # Data producers
  data_producer_eth:
    build:
      context: ./src/data_collection
    profiles: ["eth", "all"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - kafka
      - redis
      - db
  data_producer_etc:
    build:
      context: ./src/data_collection
    profiles: ["etc", "all"]
    depends_on:
      - kafka
      - redis
      - db
  data_producer_bsc:
    build:
      context: ./src/data_collection
    profiles: ["bsc", "all"]
    depends_on:
      - kafka
      - redis
      - db

  # Data consumers
  data_consumer_eth:
    build:
      context: ./src/data_collection
    profiles: ["eth", "all"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - kafka
      - redis
      - db
  data_consumer_etc:
    build:
      context: ./src/data_collection
    profiles: ["etc", "all"]
    depends_on:
      - kafka
      - redis
      - db
  data_consumer_bsc:
    build:
      context: ./src/data_collection
    profiles: ["bsc", "all"]
    depends_on:
      - kafka
      - redis
      - db

# Kafka related config
# see: https://github.com/bitnami/bitnami-docker-kafka/blob/a576f9847c9ed455645d6540a7f32e7935e6b4d7/docker-compose.yml#L24
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
